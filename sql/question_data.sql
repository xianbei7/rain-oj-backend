INSERT INTO question (id, number, title, content, difficulty, tags, answer, submit_num, accepted_num, judge_case,
                      judge_config, thumb_num, favour_num, user_id, create_time, update_time, is_delete)
VALUES (1727317919109178367, 20, '两数之和',
        '给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那两个整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案。',
        1, '["简单", "数组", "哈希表"]', '答案', 1000, 800, '[{"input":"1 2", "output": "1 2"}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 501, 301, 1726913181595181058, '2023-01-01 12:00:00',
        '2023-11-28 13:33:13', 0),
       (1727317919109178368, 30, '反转链表', '反转一个单链表。', 1, '["简单", "链表"]', '答案', 1500, 1200,
        '[{"input": [1, 2, 3, 4, 5], "output": [5, 4, 3, 2, 1]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1800, 1500, 1726913181595181058,
        '2023-01-02 13:30:00', '2023-11-28 13:33:13', 0),
       (1727317919109178369, 40, '二叉树的最大深度', '给定一个二叉树，找出其最大深度。', 1,
        '["简单", "树", "深度优先搜索"]', '答案', 1200, 1000, '[{"input": [3, 9, 20, null, null, 15, 7], "output": 3}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 2000, 1800, 1726913181595181058,
        '2023-01-03 15:45:00', '2023-11-28 13:33:13', 0),
       (1727317919109178370, 50, '有效的括号',
        '给定一个只包括 \'(\', \')\', \'{\', \'}\', \'[\', \']\' 的字符串 s ，判断字符串是否有效。', 1,
        '["简单", "栈", "字符串"]', '答案', 800, 600, '[{"input": "()","output": true}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 900, 700, 1726913181595181058, '2023-01-04 17:20:00',
        '2023-11-28 13:33:13', 0),
       (1727317919109178371, 60, '合并两个有序数组',
        '给你两个有序整数数组 nums1 和 nums2 ，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。', 1,
        '["简单", "数组", "双指针"]', '答案', 1100, 900,
        '[{"input": [1, 2, 3, 0, 0, 0], "m": 3, "nums2": [2, 5, 6], "n": 3, "output": [1, 2, 2, 3, 5, 6]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1200, 1000, 1726913181595181058,
        '2023-01-05 19:10:00', '2023-11-28 13:33:13', 0),
       (1727317919109178372, 70, '设计循环队列', '设计一个循环队列，可以实现循环操作。', 2, '["中等", "设计", "队列"]',
        '答案', 700, 500,
        '[{"input": ["MyCircularQueue", "enQueue", "enQueue", "enQueue", "deQueue", "enQueue", "deQueue", "enQueue", "enQueue", "enQueue", "enQueue"], "args": [[3], [1], [2], [3], [], [4], [], [2], [3], [4], [5]], "output": [true, true, true, true, true, true, true, true, true, true, true]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 800, 600, 1726913181595181058, '2023-01-06 21:05:00',
        '2023-11-28 13:33:13', 0),
       (1727317919109178373, 80, '最长公共前缀', '编写一个函数来查找字符串数组中的最长公共前缀。', 1,
        '["简单", "字符串"]', '答案', 1300, 1000, '[{"input": ["flower", "flow", "flight"], "output": "fl"}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1500, 1200, 1726913181595181058,
        '2023-01-07 23:40:00', '2023-11-28 13:33:13', 0),
       (1727317919109178374, 90, 'LRU缓存机制', '设计和实现一个 LRU (最近最少使用) 缓存机制。', 2,
        '["中等", "设计", "哈希表", "链表"]', '答案', 900, 700,
        '[{"input": ["LRUCache", "put", "get", "put", "get", "get"], "args": [[2], [1, 1], [1], [2, 2], [1], [2]], "output": [null, null, 1, null, -1, 2]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1000, 800, 1726913181595181058,
        '2023-01-08 01:25:00', '2023-11-28 13:33:13', 0),
       (1727317919109178375, 100, '盛最多水的容器', '给你 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。',
        2, '["中等", "数组", "双指针"]', '答案', 700, 500, '[{"input": [1, 8, 6, 2, 5, 4, 8, 3, 7], "output": 49}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 800, 600, 1726913181595181058, '2023-01-09 03:15:00',
        '2023-11-28 13:33:13', 0),
       (1727317919109178376, 110, '三数之和',
        '给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？', 2,
        '["中等", "数组", "双指针"]', '答案', 1200, 900,
        '[{"input": [-1, 0, 1, 2, -1, -4], "output": [[-1, -1, 2], [-1, 0, 1]]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1300, 1000, 1726913181595181058,
        '2023-01-10 05:30:00', '2023-11-28 13:33:13', 0),
       (1727317919109178377, 120, '四数之和',
        '给你一个由 n 个整数组成的数组 nums ，和一个目标值 target。你需要找到满足下面条件的四元组 (a, b, c, d)：', 2,
        '["中等", "数组", "哈希表", "双指针"]', '答案', 800, 600,
        '[{"input": [1, 0, -1, 0, -2, 2], "target": 0, "output": [[-2, -1, 1, 2], [-2, 0, 0, 2], [-1, 0, 0, 1]]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 900, 700, 1726913181595181058, '2023-01-11 07:45:00',
        '2023-11-28 13:33:13', 0),
       (1727317919109178378, 130, '最接近的三数之和',
        '给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。', 2,
        '["中等", "数组", "双指针"]', '答案', 1000, 800, '[{"input": [-1, 2, 1, -4], "target": 1, "output": 2}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1100, 900, 1726913181595181058,
        '2023-01-12 10:00:00', '2023-11-28 13:33:13', 0),
       (1727317919109178379, 140, '删除排序数组中的重复项',
        '给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。', 1,
        '["简单", "数组", "双指针"]', '答案', 1500, 1200, '[{"input": [1, 1, 2], "output": [1, 2]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1600, 1400, 1726913181595181058,
        '2023-01-13 12:15:00', '2023-11-28 13:33:13', 0),
       (1727317919109178380, 150, '旋转图像', '给定一个 n × n 的二维矩阵表示一个图像。', 2, '["中等", "数组"]', '答案',
        1200, 1000, '[{"input": [[1, 2, 3], [4, 5, 6], [7, 8, 9]], "output": [[7, 4, 1], [8, 5, 2], [9, 6, 3]]}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 1300, 1100, 1726913181595181058,
        '2023-01-14 14:30:00', '2023-11-28 13:33:13', 0),
       (1727317919109178381, 160, '实现 strStr()', '给定一个 haystack 字符串和', 1, '["简单", "双指针", "字符串"]',
        '答案', 700, 500, '[{"input": ["hello", "ll"], "output": 2}]',
        '{"timeLimit":9999,"memoryLimit":9999,"stackLimit":9999}', 800, 600, 1726913181595181058, '2023-01-15 16:45:00',
        '2023-11-28 13:33:13', 0);